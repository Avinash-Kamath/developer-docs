---
// Custom topic navigation component for header
const { topics } = Astro.locals.starlightSidebarTopics || { topics: [] };

// Define which topics should appear in the top navigation
const topNavTopics = ['dev-kit', 'integrations'];

// Filter topics to only show the ones we want in the top nav
const navTopics = topics.filter(topic => {
  // Check if the topic has an ID that matches our desired topics
  // The topic object should have an id property from the sidebar config
  return topNavTopics.includes(topic.id) ||
         topNavTopics.some(id => topic.link.includes(id));
});
---

<nav class="sl-nav-links">
  {navTopics.map(topic => (
    <a
      href={topic.link}
      class="sl-nav-link"
      aria-current={topic.isCurrent ? 'page' : false}
    >
      {topic.label}
    </a>
  ))}
</nav>

<style>
  .sl-nav-links {
    display: flex;
    gap: 1rem;
    align-items: center;
    margin-right: 1rem;
  }

  .sl-nav-link {
    color: var(--sl-color-gray-1);
    text-decoration: none;
    font-size: var(--sl-text-sm);
    padding: 0.5rem 0.75rem;
    border-radius: 0.375rem;
    transition: background-color 0.2s, color 0.2s;
    white-space: nowrap;
  }

  .sl-nav-link:hover {
    background-color: var(--sl-color-gray-6);
    color: var(--sl-color-white);
  }

  .sl-nav-link[aria-current="page"] {
    background-color: var(--sl-color-accent-low);
    color: var(--sl-color-accent-high);
  }

  @media (max-width: 50rem) {
    .sl-nav-links {
      display: none;
    }
  }
</style>